# Copyright 2022 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~
include "backend.conf"

appName=state-pension

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

# The context which the API will have via the API Platform http://API_GATEWAY/{api.gateway.context}/
api.gateway.context = "state-pension"


# The application languages
# ~~~~~
play.i18n.langs=["en"]


# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router=prod.Routes


# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = false
    enabled = true
}

mongodb{
    uri = "mongodb://localhost:27017/state-pension"
}


# Microservice specific config

auditing {
    enabled=true
    traceRequests=true
    consumer {
        baseUri {
            host = localhost
            port = 8100
        }
    }
}

# API Access Configuration
api {
    access {
        type = PUBLIC
        whitelist.applicationIds = []
    }
    status = STABLE
}

# Rates
rates {
    revaluation {
        # Stored as decimal e.g. 1.01 would be an increase of 1%
        startingAmount = 1.153870
        protectedPayment = 1.088794
    }
    statePension {
        0 = 0
        1 = 5.13
        2 = 10.26
        3 = 15.39
        4 = 20.53
        5 = 25.66
        6 = 30.79
        7 = 35.92
        8 = 41.05
        9 = 46.18
        10 = 51.31
        11 = 56.45
        12 = 61.58
        13 = 66.71
        14 = 71.84
        15 = 76.97
        16 = 82.10
        17 = 87.23
        18 = 92.37
        19 = 97.50
        20 = 102.63
        21 = 107.76
        22 = 112.89
        23 = 118.02
        24 = 123.15
        25 = 128.29
        26 = 133.42
        27 = 138.55
        28 = 143.68
        29 = 148.81
        30 = 153.94
        31 = 159.07
        32 = 164.21
        33 = 169.34
        34 = 174.47
        35 = 179.60
    }
}

microservice {
    metrics {
        graphite {
            host = graphite
            port = 2003
            prefix = play.${appName}.
            enabled = false
        }
    }

    services {

        auth {
            host = localhost
            port = 8500
        }

        service-locator {
            host = localhost
            port = 9602
            enabled = false
        }

        citizen-details {
            host=localhost
            port=9337
        }

        nps-hod {
            host=localhost
            port=9306
            originatoridkey=localkey
            originatoridvalue=localid
        }

        des-hod {
            host=localhost
            port=9306
            originatoridkey=localkey
            originatoridvalue=localid
        }

        if-hod {
            host = localhost
            port = 9306
            originatoridkey = localkey
            originatoridvalue = localid
        }
    }
}


# COPE
# ~~~~~
cope {
    dwp.originatorId = "DA_PFDWP"
    returnToServiceWeeks = 4
    ttlInWeeks = 13
}

ninoHashingKey = "gn:a$V96?cFHmjjcSz31tU,Xe;hOLIYeknIPIbj6Y2GAyht3#Cs+ir&hd{(50`vGAd/k8OIIV:nbM4,c&z9rX+mmK<?qK`sbmKB*Y#Ip.N'$@sX~W[6{KIXA|k`"
